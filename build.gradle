plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'application'
}

application{
	mainClass = 'com.talearnt.TalearntApplication'
}

group = 'com.talearnt'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-webflux'//HTTP요청, SNS로그인
	implementation 'org.springframework.boot:spring-boot-starter-mail:3.3.0'//이메일 전송
	implementation 'org.springframework.boot:spring-boot-starter-validation' //validation 의존성 추가
	implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	runtimeOnly 'com.mysql:mysql-connector-j'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.hibernate.orm:hibernate-core:6.5.2.Final' //hibernate-Core AWS에서 이게 없어서 오류남
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6:3.1.1.RELEASE'
	implementation 'net.nurigo:sdk:4.3.0'	//coolsms gradle 추가

	implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
	implementation 'io.jsonwebtoken:jjwt-gson:0.12.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.5'

	// Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
	// DTO <-> Entity 변환 Mapper
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	// Dynamic Qeury를 위한 Query DSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	implementation 'com.querydsl:querydsl-apt:5.0.0:jakarta'
	implementation "com.querydsl:querydsl-collections:5.0.0"//GroupBy를 사용하기위함

	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	implementation 'io.awspring.cloud:spring-cloud-aws-starter-s3:3.1.1'//AWS 관련
}
// queryDSL 설정 시작
def querydslSrcDir = 'src/main/generated'
sourceSets {
	main {
		java {
			srcDirs += [ querydslSrcDir ]
		}
	}
}


compileJava {
	options.compilerArgs << '-Aquerydsl.generatedAnnotationClass=jakarta.annotation.Generated'
}

tasks.withType(JavaCompile) {
	options.generatedSourceOutputDirectory = file(querydslSrcDir)
}

tasks.withType(JavaCompile).configureEach {
	options.annotationProcessorPath = configurations.annotationProcessor
}
clean {
	// clean 실행 시 생성된 QClass 삭제
	delete file(querydslSrcDir)
}
// queryDSL 설정 끝


tasks.named('test') {
	useJUnitPlatform()
}
